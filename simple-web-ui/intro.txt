
-------------------------------------------------------------------
what .js-lang can do in web-page within browser-envi ?

using browser provided web-APIs,
.js-lang can bring any dynamic activity/data to page

browser provided web-APIs ==> w3c reccomendation
implemented nativly & asbtracted as .js objects & functions

e.g APIs  DOM, XHR/Fetch , Timer ,..........
-------------------------------------------------------------------

using DOM API
----------------
   -> can create,retreive,update,delete HTML-elements 
   -> can change element's inner Text/HTML content
   -> can change element's properties/attributes
   -> can change element's style
   -> can listen events on HTML elements
   -> can validate form-fields
   -> can create rich UI-components
   ................

using XHR/Fetch API
--------------------
   -> can communicate with server-side programs async

using Timer API
-------------------
   -> can execute some actions on timeout/time-iterval


in HTML-5 version:

   -> https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5 


-------------------------------------------------------------------

-------------------------------------------------------------------

problems with plain-js ( your code ) with browser-api

    => browser compatability , refer => caiuse.com
    => memory issues ( i.e clean un-used DOM elements)
    => performance issues ( i.e DOM changes should be minimal)
    => data-binding is manual
    => code organization is difficult
    => too much code even for simple operations

-------------------------------------------------------------------

  Tradition web-application development

    soln : server-side page techonolgy ( JSP , PHP , ASP.net , etc...)

    limitations:

            => on every req, server need re-construct same UI-layout with different response, keeping client state
            => increase n/t bandwidth
            => on every resp, browser re-load current-page

-------------------------------------------------------------------

 best-soln :

  using third-party's Javscript Lib & F.Ws

    1. jQuery  ( DOM utility library )

    MVC & MVVM based javascript lib & F.Ws

    2. Knockout
    3. Backbone
    4. Angular
    5. Ember
    ...

    component based javascript lib & F.Ws

    6. React
    7. Angular
    8. Aurelai
    9. Vue

    ........

-------------------------------------------------------------------
.js-lang is
  -> all IO is non-blocking
  -> single-threaded process , but we can execute cuncurrent actions due to non-blocking IO

-------------------------------------------------------------------

browser e.g chrome

  1. javascript runtime/engine ( v8 )   : based on ECMAScript spec
      - single-call-stack   ==> to execute functions
      - heap                ==> to hold objects
  2. web-APIs ( e.g DOM, XHR, Timer , HTML-5 APIs )  : based on w3c reccomendation
  3. Event-Queue
  4. Event-Loop

ref: https://developer.mozilla.org/bm/docs/Web/JavaScript/EventLoop
   : http://latentflip.com/loupe
  -------------------------------------------------------------------




               

